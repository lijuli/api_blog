# Generated by Django 3.0.5 on 2021-06-22 18:34

import api.models.title
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='enter the category name', max_length=200, verbose_name='category name')),
                ('slug', models.SlugField(help_text='enter the category reference label', unique=True, verbose_name='category reference label')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='enter your comment here', verbose_name='comment text')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='date published')),
            ],
            options={
                'verbose_name': 'comments',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='enter the genre name', max_length=200, verbose_name='genre name')),
                ('slug', models.SlugField(help_text='enter the genre reference label', unique=True, verbose_name='genre reference label')),
            ],
            options={
                'ordering': ('-pk',),
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='enter your review here', verbose_name='review text')),
                ('score', models.PositiveSmallIntegerField(help_text='enter your review score', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='review score')),
                ('pub_date', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='date published')),
            ],
            options={
                'verbose_name': 'reviews',
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='enter the title name', max_length=200, verbose_name='title name')),
                ('year', models.IntegerField(blank=True, help_text='enter the title year published', null=True, validators=[api.models.title.Title.validate_year], verbose_name='title year published')),
                ('description', models.TextField(blank=True, help_text='enter information about the title', null=True, verbose_name='title description')),
                ('category', models.ForeignKey(blank=True, help_text='select a category', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='titles', to='api.Category', verbose_name='category')),
                ('genre', models.ManyToManyField(blank=True, help_text='select a genre', related_name='titles', to='api.Genre', verbose_name='genre')),
            ],
            options={
                'verbose_name': 'titles',
                'ordering': ('-pk',),
            },
        ),
    ]
